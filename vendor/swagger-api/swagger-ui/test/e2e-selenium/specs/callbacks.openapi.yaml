ning a message, the signer creates a signature of the entire content of
the message (including attachments).

The certificate and private key must be PEM encoded, and can be either created
using for example OpenSSL or obtained at an official Certificate Authority (CA).

**The recipient must have the CA certificate in the list of trusted issuers in
order to verify the signature.**

**Make sure the certificate supports emailProtection.**

When using OpenSSL this can done by the including the *-addtrust
emailProtection* parameter when creating the certificate::

    $message = new Swift_Message();

    $smimeSigner = new Swift_Signers_SMimeSigner();
    $smimeSigner->setSignCertificate('/path/to/certificate.pem', '/path/to/private-key.pem');
    $message->attachSigner($smimeSigner);

When the private key is secured using a passphrase use the following instead::

    $message = new Swift_Message();

    $smimeSigner = new Swift_Signers_SMimeSigner();
    $smimeSigner->setSignCertificate('/path/to/certificate.pe